<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>SlackTranslator</title>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <h1>SlackTranslator</h1>
  <div id="container">
    <div id="originals" class="column">
      <h2>Original (EN)</h2>
      <ul id="original-messages"></ul>
    </div>
    <div id="translations" class="column">
      <h2>Traduções (PT)</h2>
      <ul id="translated-messages"></ul>
    </div>
  </div>

  <script>
    console.log('Iniciando aplicativo SlackTranslator...');
    
    const origList = document.getElementById('original-messages');
    const transList = document.getElementById('translated-messages');
    
    function addMessage(original, translation) {
      console.log('Adicionando nova mensagem:', original);
      
      const origItem = document.createElement('li');
      origItem.textContent = original;
      origList.appendChild(origItem);
      
      const transItem = document.createElement('li');
      transItem.textContent = translation;
      transList.appendChild(transItem);
      
      origList.scrollTop = origList.scrollHeight;
      transList.scrollTop = transList.scrollHeight;
    }
    
    function loadInitialMessages() {
      console.log('Carregando mensagens iniciais...');
      fetch('/messages')
        .then(response => response.json())
        .then(messages => {
          console.log('Mensagens carregadas:', messages);
          
          origList.innerHTML = '';
          transList.innerHTML = '';
          
          messages.forEach(msg => {
            addMessage(msg.original, msg.translation);
          });
        })
        .catch(error => {
          console.error('Erro ao carregar mensagens:', error);
        });
    }
    
    window.addEventListener('load', function() {
      loadInitialMessages();
      
      setInterval(function() {
        fetch('/messages')
          .then(response => response.json())
          .then(messages => {
            if (origList.children.length !== messages.length) {
              loadInitialMessages();
            }
          })
          .catch(error => console.error('Erro ao atualizar mensagens:', error));
      }, 3000);
    });
  </script>
  <div style="margin-top: 20px; text-align: center;">
    <button id="test-button">Testar Mensagem</button>
    <p id="status-message" style="color: green; display: none;">Mensagem de teste enviada!</p>
  </div>
  
  <div id="message-form" style="margin-top: 30px; padding: 20px; background-color: #f5f5f5; border-radius: 8px;">
    <h3>Enviar mensagem para o Slack</h3>
    <div style="display: flex; flex-direction: column; gap: 10px;">
      <textarea id="message-input" placeholder="Escreva sua mensagem em português..." rows="4" style="padding: 8px; border-radius: 4px; border: 1px solid #ccc;"></textarea>
      <div style="display: flex; gap: 10px; justify-content: space-between;">
        <div style="flex-grow: 1; background-color: #eee; padding: 8px; border-radius: 4px; min-height: 50px;">
          <p style="margin: 0 0 5px 0; font-size: 0.8em; color: #666;">Visualização da tradução:</p>
          <p id="translation-preview" style="margin: 0; font-style: italic;">A tradução aparecerá aqui...</p>
        </div>
        <div style="display: flex; flex-direction: column; gap: 10px; justify-content: center;">
          <button id="translate-button" style="padding: 8px 16px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer;">Traduzir</button>
          <button id="send-button" style="padding: 8px 16px; background-color: #2196F3; color: white; border: none; border-radius: 4px; cursor: pointer;" disabled>Enviar</button>
        </div>
      </div>
    </div>
  </div>
  
  <script>
    document.getElementById('test-button').addEventListener('click', function() {
      const statusEl = document.getElementById('status-message');
      statusEl.style.display = 'block';
      statusEl.textContent = 'Enviando mensagem de teste...';
      
      fetch('/test-message')
        .then(response => response.json())
        .then(data => {
          console.log('Teste enviado com sucesso:', data);
          statusEl.textContent = 'Mensagem de teste enviada!';
          
          setTimeout(() => {
            statusEl.style.display = 'none';
          }, 3000);
        })
        .catch(error => {
          console.error('Erro ao enviar teste:', error);
          statusEl.textContent = 'Erro ao enviar mensagem de teste';
          statusEl.style.color = 'red';
        });
    });
    
    // Código para o formulário de envio de mensagem
    const messageInput = document.getElementById('message-input');
    const translationPreview = document.getElementById('translation-preview');
    const translateButton = document.getElementById('translate-button');
    const sendButton = document.getElementById('send-button');
    
    let currentTranslation = null;
    
    // Função para traduzir o texto
    translateButton.addEventListener('click', function() {
      const messageText = messageInput.value.trim();
      
      if (!messageText) {
        translationPreview.textContent = 'Por favor, escreva uma mensagem primeiro.';
        translationPreview.style.color = 'red';
        return;
      }
      
      translationPreview.textContent = 'Traduzindo...';
      translationPreview.style.color = '';
      sendButton.disabled = true;
      
      // Enviando o texto para tradução via API
      fetch('/translate-to-english', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ text: messageText })
      })
      .then(response => response.json())
      .then(data => {
        if (data.translation) {
          translationPreview.textContent = data.translation;
          currentTranslation = data.translation;
          sendButton.disabled = false;
        } else {
          translationPreview.textContent = 'Erro ao traduzir: ' + (data.error || 'Erro desconhecido');
          translationPreview.style.color = 'red';
          sendButton.disabled = true;
        }
      })
      .catch(error => {
        console.error('Erro na tradução:', error);
        translationPreview.textContent = 'Erro ao traduzir. Tente novamente.';
        translationPreview.style.color = 'red';
        sendButton.disabled = true;
      });
    });
    
    // Função para enviar a mensagem traduzida
    sendButton.addEventListener('click', function() {
      if (!currentTranslation) {
        return;
      }
      
      sendButton.disabled = true;
      sendButton.textContent = 'Enviando...';
      
      // Enviando a mensagem traduzida para o Slack
      fetch('/send-to-slack', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ 
          original: messageInput.value.trim(),
          translation: currentTranslation
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Limpar o formulário após envio bem-sucedido
          messageInput.value = '';
          translationPreview.textContent = 'Mensagem enviada com sucesso!';
          translationPreview.style.color = 'green';
          currentTranslation = null;
          
          setTimeout(() => {
            translationPreview.textContent = 'A tradução aparecerá aqui...';
            translationPreview.style.color = '';
          }, 3000);
        } else {
          translationPreview.textContent = 'Erro ao enviar: ' + (data.error || 'Erro desconhecido');
          translationPreview.style.color = 'red';
          sendButton.disabled = false;
        }
      })
      .catch(error => {
        console.error('Erro ao enviar mensagem:', error);
        translationPreview.textContent = 'Erro ao enviar. Tente novamente.';
        translationPreview.style.color = 'red';
        sendButton.disabled = false;
      })
      .finally(() => {
        sendButton.textContent = 'Enviar';
      });
    });
    
    // Desabilitar botão de envio quando o texto for alterado
    messageInput.addEventListener('input', function() {
      sendButton.disabled = true;
      if (messageInput.value.trim()) {
        translationPreview.textContent = 'Clique em "Traduzir" para ver a prévia da tradução.';
        translationPreview.style.color = '';
      } else {
        translationPreview.textContent = 'A tradução aparecerá aqui...';
        translationPreview.style.color = '';
      }
    });
  </script>
</body>
</html>
